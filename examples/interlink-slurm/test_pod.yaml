# apiVersion: v1
# data:
#   function_config.yaml: |
#     name: edgan3
#     cluster_id: oscar-cluster
#     memory: 1Gi
#     cpu: "1.0"
#     total_memory: ""
#     total_cpu: ""
#     enable_gpu: false
#     image_prefetch: false
#     synchronous:
#       min_scale: 0
#       max_scale: 0
#     rescheduler_threshold: 0
#     log_level: DEBUG
#     image: docker://ghcr.io/intertwin-eu/itwinai-3dgan-inference:0.0.1
#     alpine: false
#     token: a9aa9d6b53a71792b96ad93a9b2e703c9ad8a5c6d18d642419fa95a92e844d53
#     file_stage_in: false
#     input:
#     - storage_provider: webdav.dcache
#       path: /Users/slangarita/itwin/input
#     output:
#     - storage_provider: webdav.dcache
#       path: /Users/slangarita/itwin/output
#     expose:
#       min_scale: 0
#       max_scale: 0
#       port: 0
#       cpu_threshold: 0
#     environment:
#       Variables: {}
#     annotations: {}
#     labels:
#       applicationId: edgan3
#       oscar_service: edgan3
#       queue: root.oscar-queue.edgan3
#     storage_providers:
#       minio:
#         default:
#           endpoint: https://minio2.oscar.131.154.96.26.myip.cloud.infn.it
#           verify: false
#           access_key: minio
#           secret_key: minio123
#           region: us-east-1
#         oscar-cluster:
#           endpoint: https://minio2.oscar.131.154.96.26.myip.cloud.infn.it
#           verify: false
#           access_key: minio
#           secret_key: minio123
#           region: us-east-1
#       webdav:
#         dcache:
#           hostname: prometheus.desy.de
#           login: slangarita
#           password: oscar-grycap
#     clusters:
#       oscar-cluster:
#         endpoint: https://oscar.131.154.96.26.myip.cloud.infn.it
#         auth_user: oscar
#         auth_password: oscar123
#         ssl_verify: false
#   script.sh: |-
#     #!/bin/bash

#     echo "SCRIPT: Invoked Image CERN-3DGAN. File available in $INPUT_FILE_PATH"
#     FILE_NAME=`basename "$INPUT_FILE_PATH"`
#     OUTPUT_FILE="$TMP_OUTPUT_DIR/$FILE_NAME"
#     mkdir -p /usr/data/exp_data/3dgan_data/
#     mv $INPUT_FILE_PATH /usr/data/exp_data/3dgan_data/$FILE_NAME
#     /bin/bash -c "cd /usr/src/app/ && python train.py -p inference-pipeline.yaml"
#     tar czf $OUTPUT_FILE.tar --absolute-names /usr/data/3dgan-generated-data/
# kind: ConfigMap
# metadata:
#   name: test-config
#   namespace: vk
# ---
apiVersion: v1
kind: Pod
metadata:
  name: test-pod-cfg-cowsay-dciangot
  namespace: vk
  annotations:
    slurm-job.knoc.io/flags: "--job-name=test-pod-cfg -t 2800  --ntasks=8 --nodes=1 --mem-per-cpu=2000"
spec:
  restartPolicy: Never
  containers:
  - image: ghcr.io/grycap/cowsay 
    command: ["/bin/sh"]
    args: ["-c",  "\"touch /tmp/test.txt && sleep 60 && echo \\\"hello muu\\\" | /usr/games/cowsay \" " ]
    imagePullPolicy: Always
    name: cowsayo
    volumeMounts:
    - mountPath: /config
      name: test-config
      readOnly: true
    - mountPath: /usr/data
      name: data
  dnsPolicy: ClusterFirst
  nodeSelector:
    kubernetes.io/hostname: test-vk
  volumes:
  - configMap:
      defaultMode: 420
      name: test-config
    name: test-config
  - emptyDir: {}
    name: data
  tolerations:
  - key: virtual-node.interlink/no-schedule
    operator: Exists
